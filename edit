def plot_features(features, df, title, y_label):
    mean_df = df.loc[['mean'], df.columns.to_series().str.contains(features)]
    median_df = df.loc[['50%'], df.columns.to_series().str.contains(features)]
    mean_Transpose = mean_df.transpose()
    median_Transpose = median_df.transpose()
    ## merge the two dataframes
    mean_median_Transpose = pd.merge(mean_Transpose, median_Transpose, left_index=True, right_index=True)
    mean_median_Transpose.columns = ['mean', 'median']
    ## plot the dataframe
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=mean_median_Transpose.index, y=mean_median_Transpose['mean'], name='mean', mode='lines+markers'))
    fig.add_trace(go.Scatter(x=mean_median_Transpose.index, y=mean_median_Transpose['median'], name='median', mode='lines+markers'))
    fig.update_layout(title=title, xaxis_title='Time', yaxis_title=y_label)
    return fig

html.Br(),
    
    dbc.Row([html.H1(children='UMAP label analysis', style={'textAlign': 'center'})], style={'padding': '20px'}),

    html.Br(),

    dbc.Row
    ([
         dbc.Col([
            
            dbc.Row([

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('heart_rate', df_umap_1_describe, 'Heart Rate mean and median for Label 0', 'Heart Rate'))], 
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('heart_rate', df_umap_2_describe, 'Heart Rate mean and median for Label 1', 'Heart Rate'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('heart_rate', df_umap_3_describe, 'Heart Rate mean and median for Label 1', 'Heart Rate'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

            ]),
        ],width=4, sm=12, md=12, lg=4),
        
        
        dbc.Col([
            
            dbc.Row([

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('respiratory_rate', df_umap_1_describe, 'Respiratory Rate mean and median for Label 0', 'Respiratory Rate'))], 
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('respiratory_rate', df_umap_2_describe, 'Respiratory Rate mean and median for Label 0', 'Respiratory Rate'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('respiratory_rate', df_umap_3_describe, 'Respiratory Rate mean and median for Label 0', 'Respiratory Rate'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

            ]),
        ],width=4, sm=12, md=12, lg=4), 

        dbc.Col([
            
            dbc.Row([

                dbc.Col([

                    html.Div([dcc.Graph(figure = plot_features('hematocrit', df_umap_1_describe, 'hematocrit mean and median for Label 0', 'hematocrit'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                     html.Div([dcc.Graph(figure = plot_features('hematocrit', df_umap_2_describe, 'hematocrit mean and median for Label 0', 'hematocrit'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

                dbc.Col([

                     html.Div([dcc.Graph(figure = plot_features('hematocrit', df_umap_3_describe, 'hematocrit mean and median for Label 0', 'hematocrit'))],
                    style={'width': '100%', 'display': 'inline-block'})
                ]),

            ]),
        ],width=4, sm=12, md=12, lg=4)

    ]),